package main

import (
	"fmt"
)

/*
*  参照型
 */
// 特殊なデータ構造を備えた参照型は「スライス（slice）」「マップ（map）」「チャネル（channel）」の3つが定義されている

// 参照型は関数などの引数によって渡された値をそのまま参照できる
// 一方、参照型ではない配列の様な値型は引数として渡された時にメモリ領域の異なる別物となる為直接変数の値に関与できない

func main() {
	// 値型と参照型の大きな違いはnilを値として取り得るかどうか
	var (
		a [3]int
		s []int
	)
	// 初期化を伴わず配列型の変数を定義した場合メモリ領域が確保され要素が埋められる
	fmt.Println(a) // [0 0 0]

	// 一方変数定義だけを行ったスライスはnilが初期値となる
	// これは何も値への参照を保持していない状態を表している
	fmt.Println(s == nil) // true

}
